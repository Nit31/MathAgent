services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network
    volumes:
      - zookeeper-data:/data
      - zookeeper-datalog:/datalog
    command: ["sh", "-c", "rm -rf /data/version-2 && rm -rf /datalog/version-2 && /bin/bash /opt/zookeeper-3.4.13/bin/zkServer.sh start-foreground"]

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9093:9093"
      - "9094:9094"  # For external listener
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENER_NAMES: INSIDE,EXTERNAL
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,EXTERNAL://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,EXTERNAL://localhost:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENER_INTERNAL: INSIDE://0.0.0.0:9093
      KAFKA_LISTENER_EXTERNAL: EXTERNAL://0.0.0.0:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_INSIDE: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_EXTERNAL: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_HOSTNAME: kafka
      KAFKA_BROKER_ID: 1
    depends_on:
      - zookeeper
    networks:
      - kafka-network
    volumes:
      - kafka-data:/kafka
    healthcheck:
      test: ["CMD", "bash", "-c", "nc -z localhost 9093 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api-service
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093  # Use Kafka container hostname and internal port
      KAFKA_CONSUMER_TOPIC: math-problems
      KAFKA_PRODUCER_TOPIC: math-solutions
      KAFKA_CONSUMER_GROUP_ID: math-solution-listener
    networks:
      - kafka-network

  consumer:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: kafka-consumer
    depends_on:
      - kafka
      - api
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
      KAFKA_CONSUMER_TOPIC: math-problems
      KAFKA_PRODUCER_TOPIC: math-solutions
      KAFKA_CONSUMER_GROUP_ID: math-agent
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge

volumes:
  zookeeper-data:
  zookeeper-datalog:
  kafka-data:
